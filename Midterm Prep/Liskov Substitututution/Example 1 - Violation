public class Bird{
    public void fly() {
        System.out.println("Bird is flying");
    }
  public void walk(){
        System.out.println("Bird is walking");
  }
}

public class Duck extends Bird{
 @Override
  public void fly() {
      System.out.println("Duck is flying");
  }

 @Override
  public void walk() {
      System.out.println("Duck is walking");
  }
}

public class Ostrich extends Bird{
 @Override
  public void fly() {
      throw new UnsupportedOperationException("Ostrich cannot fly");
  }

 @Override
  public void walk() {
      System.out.println("Ostrich is walking");
  }
}

public class Zoo {
    public static void main(String[] args) {
        Bird[] birds = new Bird[2];
        birds[0] = new Bird();
        birds[1] = new Bird();

        for (Bird bird : birds) {
            bird.walk();
            bird.fly();
        }
    }
}

// Now let's substitute Bird with its sub-classes, which are Duck and Ostrich and the main class looks as follows;

// public class Zoo {
//     public static void main(String[] args) {
//         Bird[] birds = new Bird[2];
//         birds[0] = new Duck();
//         birds[1] = new Ostrich();

//         for (Bird bird : birds) {
//             bird.walk();
//             bird.fly();
//         }
//     }
// }
// When executing Ostrich's fly method, this program will throw an error since Ostrich cannot fly.