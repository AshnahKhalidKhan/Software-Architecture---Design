class ConcreteUserRepository{
  fun findUserBy(username: String): User? {
    ...
  }
  ...
}

class UserService {
    private val userRepository: ConcreteUserRepository = ConcreteUserRepository()

    fun authenticateUser(username: String, password: String): Boolean {
        // Logic to authenticate user using the DatabaseService
        val existingUser = userRepository.findUserBy(username)
        if(existingUser != null) {
            // authenticate
            ...
        }
   }
   ...
}

class UserIntegrationTest{

    val userService = UserService()

    @Test
    fun `authenticateUser returns true for existing username`(){
        // given
        val username = "existingUser"
        // add user to database
        ...

        // when
        val actual = userService.authenticateUser(username)
        
        // then
        assertThat(actual).isTrue()

    }
}